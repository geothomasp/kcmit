select ' Start time of AWARD_AMOUNT_TRANSACTION is '|| localtimestamp from dual
/
alter table AWARD_AMOUNT_TRANSACTION add (MIT_AWARD_NUMBER varchar(10))
/
alter table AWARD_AMOUNT_TRANSACTION add (MIT_TRANSACTION_ID VARCHAR2(10))
/
alter table AWARD_AMOUNT_TRANSACTION add (MIT_SEQUENCE_NUMBER NUMBER(4))
/
commit
/
ALTER TABLE AWARD_AMOUNT_TRANSACTION DISABLE CONSTRAINT FK_AWARD_AMOUNT_TRANSACTION3
/
commit
/
INSERT INTO AWARD_AMOUNT_TRANSACTION(AWARD_AMOUNT_TRANSACTION_ID,MIT_AWARD_NUMBER,MIT_SEQUENCE_NUMBER,MIT_TRANSACTION_ID,AWARD_NUMBER,TRANSACTION_ID,TRANSACTION_TYPE_CODE,NOTICE_DATE,COMMENTS,UPDATE_TIMESTAMP,UPDATE_USER,VER_NBR,OBJ_ID)
SELECT
      SEQ_AWARD_AMOUNT_TRANS_ID.NEXTVAL AS AWARD_AMOUNT_TRANSACTION_ID,
      t5.MIT_AWARD_NUMBER,
	  t5.sequence_number,
      t5.MIT_TRANSACTION_ID,
      replace(t5.MIT_AWARD_NUMBER,'-','-00') AS AWARD_NUMBER,
      KREW_DOC_HDR_S.NEXTVAL,
      t5.TRANSACTION_TYPE_CODE,
      t5.NOTICE_DATE,
      t5.COMMENTS,
      t5.UPDATE_TIMESTAMP,
      t5.UPDATE_USER,
      1,
      SYS_GUID()
 FROM     
      (
          select              
              t1.MIT_AWARD_NUMBER,
              t1.sequence_number,
              t1.amount_sequence_number,
              t1.TRANSACTION_ID AS MIT_TRANSACTION_ID,  
              nvl2(aat.TRANSACTION_TYPE_CODE,(decode(aat.TRANSACTION_TYPE_CODE,0,6,aat.TRANSACTION_TYPE_CODE)),1) TRANSACTION_TYPE_CODE,    
              nvl(aat.NOTICE_DATE,null) NOTICE_DATE,
              nvl(aat.COMMENTS,null) COMMENTS,
              nvl(aat.UPDATE_TIMESTAMP,t1.UPDATE_TIMESTAMP) UPDATE_TIMESTAMP,   
              nvl(aat.UPDATE_USER, t1.UPDATE_USER) UPDATE_USER
          from OSP$AWARD_AMOUNT_INFO@coeus.kuali t1 inner join TEMP_TAB_TO_SYNC_AWARD t on t1.MIT_AWARD_NUMBER=t.MIT_AWARD_NUMBER and t1.sequence_number=t.sequence_number left outer join OSP$AWARD_AMOUNT_TRANSACTION@coeus.kuali aat
          on t1.mit_award_number = aat.mit_award_number and t1.transaction_id = aat.transaction_id
		  where t.feed_type='N'
          order by t1.mit_award_number,t1.sequence_number,t1.amount_sequence_number
      ) t5
/
commit
/
INSERT INTO TIME_AND_MONEY_DOCUMENT(DOCUMENT_NUMBER,AWARD_NUMBER,VER_NBR,UPDATE_TIMESTAMP,UPDATE_USER,OBJ_ID)
select amt.TRANSACTION_ID,amt.AWARD_NUMBER,1,amt.UPDATE_TIMESTAMP,amt.UPDATE_USER,SYS_GUID() 
from  AWARD_AMOUNT_TRANSACTION amt 
inner join TEMP_TAB_TO_SYNC_AWARD t on amt.MIT_AWARD_NUMBER=t.MIT_AWARD_NUMBER and amt.MIT_SEQUENCE_NUMBER = t.sequence_number
where t.feed_type='N'
/
commit	
/
ALTER TABLE AWARD_AMOUNT_TRANSACTION ENABLE CONSTRAINT FK_AWARD_AMOUNT_TRANSACTION3
/
commit
/
CREATE INDEX AWARD_AMOUNT_T_I1 ON AWARD_AMOUNT_TRANSACTION(MIT_AWARD_NUMBER,MIT_TRANSACTION_ID)
/
commit	
/
INSERT INTO TEMP_KREW_SYNC(DOCUMENT_NUMBER,RTE_BRCH_ID,RTE_NODE_ID,RTE_NODE_INSTN_ID,MODULE)
SELECT amt.DOCUMENT_NUMBER,KREW_RTE_NODE_S.NEXTVAL,KREW_RTE_NODE_S.NEXTVAL,KREW_RTE_NODE_S.NEXTVAL,'TAM'
FROM TIME_AND_MONEY_DOCUMENT amt
inner join TEMP_TAB_TO_SYNC_AWARD ts on amt.AWARD_NUMBER=replace(ts.mit_award_number,'-','-00') 
where ts.feed_type='N';
/
commit
/
commit
/
declare
ls_doc_typ_id VARCHAR2(40);
begin  
select max(DOC_TYP_ID) into ls_doc_typ_id from KREW_DOC_TYP_T where DOC_TYP_NM='TimeAndMoneyDocument';

INSERT INTO KREW_DOC_HDR_T(DOC_HDR_ID,DOC_TYP_ID,DOC_HDR_STAT_CD,RTE_LVL,STAT_MDFN_DT,CRTE_DT,APRV_DT,FNL_DT,RTE_STAT_MDFN_DT,TTL,APP_DOC_ID,DOC_VER_NBR,INITR_PRNCPL_ID,VER_NBR,RTE_PRNCPL_ID,DTYPE,OBJ_ID,APP_DOC_STAT,APP_DOC_STAT_MDFN_DT)
SELECT t.DOCUMENT_NUMBER,ls_doc_typ_id,'F',0,sysdate,sysdate,sysdate,null,sysdate,('KC TimeAndMoney - '||t.AWARD_NUMBER),null,1, nvl(kp.PRNCPL_ID,'unknownUser'),1,null,null,sys_guid(),null,null
from TIME_AND_MONEY_DOCUMENT t 
inner join TEMP_TAB_TO_SYNC_AWARD ts on t.AWARD_NUMBER=replace(ts.mit_award_number,'-','-00') 
left outer join KRIM_PRNCPL_T kp on kp.PRNCPL_NM=LOWER(t.UPDATE_USER)
where ts.feed_type='N';
commit;
end;
/      
INSERT INTO KRNS_DOC_HDR_T(DOC_HDR_ID,OBJ_ID,VER_NBR,FDOC_DESC,ORG_DOC_HDR_ID,TMPL_DOC_HDR_ID,EXPLANATION)
SELECT DOCUMENT_NUMBER,SYS_GUID(),1,AWARD_NUMBER,NULL,NULL,NULL FROM TIME_AND_MONEY_DOCUMENT
inner join TEMP_TAB_TO_SYNC_AWARD ts on TIME_AND_MONEY_DOCUMENT.AWARD_NUMBER=replace(ts.mit_award_number,'-','-00')
where ts.feed_type='N' 
/ 
commit
/	
INSERT INTO KREW_DOC_HDR_CNTNT_T(DOC_HDR_ID,DOC_CNTNT_TXT)
SELECT DOCUMENT_NUMBER,NULL FROM TIME_AND_MONEY_DOCUMENT
inner join TEMP_TAB_TO_SYNC_AWARD ts on TIME_AND_MONEY_DOCUMENT.AWARD_NUMBER=replace(ts.mit_award_number,'-','-00')
where ts.feed_type='N' 
/ 
commit
/		 
INSERT INTO KREW_RTE_BRCH_T(RTE_BRCH_ID,NM,PARNT_ID,INIT_RTE_NODE_INSTN_ID,SPLT_RTE_NODE_INSTN_ID,JOIN_RTE_NODE_INSTN_ID,VER_NBR)
SELECT RTE_BRCH_ID,'PRIMARY',NULL,NULL,NULL,NULL,1 FROM TEMP_KREW_SYNC where MODULE='TAM'
/ 
commit
/
declare
ls_doc_typ_id VARCHAR2(40);
begin  
select max(DOC_TYP_ID) into ls_doc_typ_id from KREW_DOC_TYP_T where DOC_TYP_NM='TimeAndMoneyDocument';

INSERT INTO KREW_RTE_NODE_T(RTE_NODE_ID,DOC_TYP_ID,NM,TYP,RTE_MTHD_NM,RTE_MTHD_CD,FNL_APRVR_IND,MNDTRY_RTE_IND,ACTVN_TYP,BRCH_PROTO_ID,VER_NBR,CONTENT_FRAGMENT,GRP_ID,NEXT_DOC_STAT)
SELECT RTE_NODE_ID,ls_doc_typ_id,'Initiated','org.kuali.rice.kew.engine.node.InitialNode',null,null,0,0,'P',null,1,null,null,null from TEMP_KREW_SYNC where MODULE='TAM';
commit;
end;
/
INSERT INTO KREW_RTE_NODE_INSTN_T(RTE_NODE_INSTN_ID,DOC_HDR_ID,RTE_NODE_ID,BRCH_ID,PROC_RTE_NODE_INSTN_ID,ACTV_IND,CMPLT_IND,INIT_IND,VER_NBR)
SELECT RTE_NODE_INSTN_ID,DOCUMENT_NUMBER,RTE_NODE_ID,RTE_BRCH_ID,NULL,1,0,0,1 FROM TEMP_KREW_SYNC where MODULE='TAM'
/ 
commit
/
INSERT INTO KREW_INIT_RTE_NODE_INSTN_T(DOC_HDR_ID,RTE_NODE_INSTN_ID)
SELECT DOCUMENT_NUMBER,RTE_NODE_INSTN_ID FROM TEMP_KREW_SYNC where MODULE='TAM'
/ 
commit
/
INSERT INTO KREW_ACTN_RQST_T(ACTN_RQST_ID,PARNT_ID,ACTN_RQST_CD,DOC_HDR_ID,RULE_ID,STAT_CD,RSP_ID,PRNCPL_ID,ROLE_NM,QUAL_ROLE_NM,QUAL_ROLE_NM_LBL_TXT,RECIP_TYP_CD,PRIO_NBR,RTE_TYP_NM,RTE_LVL_NBR,RTE_NODE_INSTN_ID,ACTN_TKN_ID,DOC_VER_NBR,CRTE_DT,RSP_DESC_TXT,FRC_ACTN,ACTN_RQST_ANNOTN_TXT,DLGN_TYP,APPR_PLCY,CUR_IND,VER_NBR,GRP_ID,RQST_LBL)
select KREW_ACTN_RQST_S.NEXTVAL,NULL,'C',k.DOC_HDR_ID,NULL,'A',-3,k.INITR_PRNCPL_ID,NULL,NULL,NULL,'U',0,NULL,0,t.RTE_NODE_INSTN_ID,NULL,1,SYSDATE,'Initiator needs to complete document.',1,NULL,NULL,'F',1	,0,NULL,NULL from KREW_DOC_HDR_T k inner join TEMP_KREW_SYNC t on k.DOC_HDR_ID=t.DOCUMENT_NUMBER where k.TTL like 'KC TimeAndMoney%' AND t.MODULE='TAM' 
/ 
commit
/
INSERT INTO KREW_ACTN_TKN_T(ACTN_TKN_ID,DOC_HDR_ID,PRNCPL_ID,DLGTR_PRNCPL_ID,ACTN_CD,ACTN_DT,DOC_VER_NBR,ANNOTN,CUR_IND,VER_NBR,DLGTR_GRP_ID)
select KREW_ACTN_TKN_S.NEXTVAL,k.DOC_HDR_ID,k.INITR_PRNCPL_ID,NULL,'S',SYSDATE,1,NULL,1,1,NULL from KREW_DOC_HDR_T k inner join TEMP_KREW_SYNC t on k.DOC_HDR_ID=t.DOCUMENT_NUMBER where k.TTL like 'KC TimeAndMoney%' AND t.MODULE='TAM' 
/ 
commit
/
-- Migrate award amount transaction + doc handler end 
-- Starts AWARD_AMOUNT_INFO 
DECLARE
li_ver_nbr NUMBER(8):=1;
li_amt_info_id NUMBER(12);
li_award_id NUMBER(22);
ls_tnm_document_number VARCHAR2(40 );
li_transaction_detail NUMBER(10,0);
li_transaction NUMBER(10,0):=null;
ls_comments VARCHAR2(2000);
ls_source_award VARCHAR2(12);
ls_processed_flag CHAR(1);
li_commit_count number:=0;
ls_transaction_detail_type	VARCHAR2(12):='PRIMARY';
ls_trans_det_comment VARCHAR2(200 BYTE):='Initial Time And Money creation transaction';
ls2_transaction_detail_type	VARCHAR2(12):='INTERMEDIATE';
ls2_trans_det_comment VARCHAR2(200 BYTE):='Single Node Money Transaction';
li_originating_award_version NUMBER(4):=NULL;
ls_award_number VARCHAR2(12);
li_seq_info NUMBER(4);
ls_mit_awd_number varchar2(12);
li_mit_seq NUMBER(4);
CURSOR c_award IS
SELECT a.AWARD_NUMBER,a.SEQUENCE_NUMBER FROM AWARD a INNER JOIN TEMP_TAB_TO_SYNC_AWARD ts on a.AWARD_NUMBER=replace(ts.MIT_AWARD_NUMBER,'-','-00') and a.SEQUENCE_NUMBER=ts.SEQUENCE_NUMBER 
ORDER BY a.AWARD_NUMBER,a.SEQUENCE_NUMBER;
r_award c_award%ROWTYPE;

CURSOR c_amt_info(as_mit varchar2,as_seq number) IS
SELECT MIT_AWARD_NUMBER,SEQUENCE_NUMBER,AMOUNT_SEQUENCE_NUMBER,ANTICIPATED_TOTAL_AMOUNT,ANT_DISTRIBUTABLE_AMOUNT,FINAL_EXPIRATION_DATE,CURRENT_FUND_EFFECTIVE_DATE,AMOUNT_OBLIGATED_TO_DATE,OBLI_DISTRIBUTABLE_AMOUNT,OBLIGATION_EXPIRATION_DATE,TRANSACTION_ID,ENTRY_TYPE,EOM_PROCESS_FLAG,UPDATE_TIMESTAMP,UPDATE_USER,ANTICIPATED_CHANGE,OBLIGATED_CHANGE,OBLIGATED_CHANGE_DIRECT,OBLIGATED_CHANGE_INDIRECT,ANTICIPATED_CHANGE_DIRECT,ANTICIPATED_CHANGE_INDIRECT,ANTICIPATED_TOTAL_DIRECT,ANTICIPATED_TOTAL_INDIRECT,OBLIGATED_TOTAL_DIRECT,OBLIGATED_TOTAL_INDIRECT FROM OSP$AWARD_AMOUNT_INFO
where MIT_AWARD_NUMBER=as_mit and SEQUENCE_NUMBER =(
select max(aw.sequence_number) from OSP$AWARD_AMOUNT_INFO aw where  aw.mit_award_number=OSP$AWARD_AMOUNT_INFO.mit_award_number and aw.sequence_number<=as_seq)
ORDER BY MIT_AWARD_NUMBER,SEQUENCE_NUMBER,AMOUNT_SEQUENCE_NUMBER;
r_amt_info c_amt_info%ROWTYPE;

BEGIN

IF c_award%ISOPEN THEN 
CLOSE c_award;
END IF;
OPEN c_award;
LOOP
FETCH c_award INTO r_award;
EXIT WHEN c_award%NOTFOUND;

	--SELECT FN_MIT_AWARD_NUMBER(r_award.AWARD_NUMBER) INTO ls_mit_awd_number FROM DUAL;
ls_mit_awd_number := REPLACE(r_award.AWARD_NUMBER,'-00','-');
	--SELECT FN_GET_SEQ(ls_mit_awd_number,r_award.SEQUENCE_NUMBER) INTO li_mit_seq FROM DUAL;
li_mit_seq := r_award.SEQUENCE_NUMBER;

begin
SELECT AWARD_ID INTO li_award_id FROM AWARD WHERE AWARD_NUMBER = r_award.AWARD_NUMBER AND SEQUENCE_NUMBER = r_award.SEQUENCE_NUMBER;
exception
when others then
dbms_output.put_line('AWARD_NUMBER:'||ls_award_number||'SEQUENCE_NUMBER:'||li_seq_info);
end;

IF c_amt_info%ISOPEN THEN
CLOSE c_amt_info;
END IF;
OPEN c_amt_info(ls_mit_awd_number,li_mit_seq);
LOOP
FETCH c_amt_info INTO r_amt_info;
EXIT WHEN c_amt_info%NOTFOUND;

li_seq_info := r_amt_info.SEQUENCE_NUMBER;
li_originating_award_version := li_seq_info;
ls_source_award:='000000-00000';
		--SELECT FN_AWARD_NUMBER(r_amt_info.MIT_AWARD_NUMBER) INTO ls_award_number FROM DUAL;
	ls_award_number := REPLACE(r_amt_info.MIT_AWARD_NUMBER,'-','-00');

--SELECT SEQ_TRANSACTION_ID.NEXTVAL INTO li_transaction FROM DUAL;
li_transaction:=null;
begin
SELECT TRANSACTION_ID INTO ls_tnm_document_number FROM AWARD_AMOUNT_TRANSACTION WHERE MIT_AWARD_NUMBER = r_amt_info.MIT_AWARD_NUMBER
AND MIT_TRANSACTION_ID = r_amt_info.TRANSACTION_ID;
exception
when others then
ls_tnm_document_number:=null;
--dbms_output.put_line('MIT_AWARD_NUMBER:'||ls_award_number||'TRANSACTION_ID:'||r_amt_info.TRANSACTION_ID);
end;

IF ls_tnm_document_number is not null then
	begin
	--In TRANSACTION_DETAILS table ,col  TRANSACTION_ID has been set to ZERO because there is no pending transaction
	if r_amt_info.AMOUNT_SEQUENCE_NUMBER !=1 then

			SELECT SEQ_TRANSACTION_DETAIL_ID.NEXTVAL INTO li_transaction_detail FROM DUAL;
			INSERT INTO TRANSACTION_DETAILS(TRANSACTION_DETAIL_ID,AWARD_NUMBER,SEQUENCE_NUMBER,TRANSACTION_ID,TNM_DOCUMENT_NUMBER,COMMENTS,SOURCE_AWARD_NUMBER,DESTINATION_AWARD_NUMBER,OBLIGATED_AMOUNT,ANTICIPATED_AMOUNT,UPDATE_TIMESTAMP,UPDATE_USER,VER_NBR,OBJ_ID,TRANSACTION_DETAIL_TYPE,OBLIGATED_DIRECT_AMOUNT,OBLIGATED_INDIRECT_AMOUNT,ANTICIPATED_DIRECT_AMOUNT,ANTICIPATED_INDIRECT_AMOUNT)
			VALUES(li_transaction_detail,ls_award_number,li_seq_info,0,ls_tnm_document_number,ls_trans_det_comment,ls_source_award,ls_award_number,r_amt_info.OBLIGATED_CHANGE,r_amt_info.ANTICIPATED_CHANGE,r_amt_info.UPDATE_TIMESTAMP,r_amt_info.UPDATE_USER,li_ver_nbr,SYS_GUID(),ls_transaction_detail_type,r_amt_info.OBLIGATED_CHANGE_DIRECT,r_amt_info.OBLIGATED_CHANGE_INDIRECT,r_amt_info.ANTICIPATED_CHANGE_DIRECT,r_amt_info.ANTICIPATED_CHANGE_INDIRECT);
			
			SELECT SEQ_TRANSACTION_DETAIL_ID.NEXTVAL INTO li_transaction_detail FROM DUAL;    
			INSERT INTO TRANSACTION_DETAILS(TRANSACTION_DETAIL_ID,AWARD_NUMBER,SEQUENCE_NUMBER,TRANSACTION_ID,TNM_DOCUMENT_NUMBER,COMMENTS,SOURCE_AWARD_NUMBER,DESTINATION_AWARD_NUMBER,OBLIGATED_AMOUNT,ANTICIPATED_AMOUNT,UPDATE_TIMESTAMP,UPDATE_USER,VER_NBR,OBJ_ID,TRANSACTION_DETAIL_TYPE,OBLIGATED_DIRECT_AMOUNT,OBLIGATED_INDIRECT_AMOUNT,ANTICIPATED_DIRECT_AMOUNT,ANTICIPATED_INDIRECT_AMOUNT)
			VALUES(li_transaction_detail,ls_award_number,li_seq_info,0,ls_tnm_document_number,ls2_trans_det_comment,ls_source_award,ls_award_number,r_amt_info.OBLIGATED_CHANGE,r_amt_info.ANTICIPATED_CHANGE,r_amt_info.UPDATE_TIMESTAMP,r_amt_info.UPDATE_USER,li_ver_nbr,SYS_GUID(),ls2_transaction_detail_type,r_amt_info.OBLIGATED_CHANGE_DIRECT,r_amt_info.OBLIGATED_CHANGE_INDIRECT,r_amt_info.ANTICIPATED_CHANGE_DIRECT,r_amt_info.ANTICIPATED_CHANGE_INDIRECT);
	end if;

	SELECT SEQ_TRANSACTION_DETAIL_ID.NEXTVAL INTO li_transaction_detail FROM DUAL;

	INSERT INTO TRANSACTION_DETAILS(TRANSACTION_DETAIL_ID,AWARD_NUMBER,SEQUENCE_NUMBER,TRANSACTION_ID,TNM_DOCUMENT_NUMBER,COMMENTS,SOURCE_AWARD_NUMBER,DESTINATION_AWARD_NUMBER,OBLIGATED_AMOUNT,ANTICIPATED_AMOUNT,UPDATE_TIMESTAMP,UPDATE_USER,VER_NBR,OBJ_ID,TRANSACTION_DETAIL_TYPE,OBLIGATED_DIRECT_AMOUNT,OBLIGATED_INDIRECT_AMOUNT,ANTICIPATED_DIRECT_AMOUNT,ANTICIPATED_INDIRECT_AMOUNT)
	VALUES(li_transaction_detail,ls_award_number,li_seq_info,0,ls_tnm_document_number,ls_trans_det_comment,ls_source_award,ls_award_number,r_amt_info.OBLIGATED_CHANGE,r_amt_info.ANTICIPATED_CHANGE,r_amt_info.UPDATE_TIMESTAMP,r_amt_info.UPDATE_USER,li_ver_nbr,SYS_GUID(),ls_transaction_detail_type,r_amt_info.OBLIGATED_CHANGE_DIRECT,r_amt_info.OBLIGATED_CHANGE_INDIRECT,r_amt_info.ANTICIPATED_CHANGE_DIRECT,r_amt_info.ANTICIPATED_CHANGE_INDIRECT);
	
	EXCEPTION
	WHEN OTHERS THEN 
	dbms_output.put_line('ERROR IN PENDING TRANSACTION_DETAILS,AWARD_NUMBER:'||r_amt_info.MIT_AWARD_NUMBER||'-'||sqlerrm);
	end;
END IF;

begin
	if r_amt_info.AMOUNT_SEQUENCE_NUMBER = 1 then
			SELECT SEQUENCE_AWARD_ID.NEXTVAL INTO li_amt_info_id FROM DUAL;
			INSERT INTO AWARD_AMOUNT_INFO(AWARD_AMOUNT_INFO_ID,ANTICIPATED_CHANGE_DIRECT,ANTICIPATED_CHANGE_INDIRECT,ANTICIPATED_TOTAL_DIRECT,ANTICIPATED_TOTAL_INDIRECT,OBLIGATED_TOTAL_DIRECT,OBLIGATED_TOTAL_INDIRECT,VER_NBR,TNM_DOCUMENT_NUMBER,AWARD_ID,AWARD_NUMBER,SEQUENCE_NUMBER,ANTICIPATED_TOTAL_AMOUNT,ANT_DISTRIBUTABLE_AMOUNT,FINAL_EXPIRATION_DATE,CURRENT_FUND_EFFECTIVE_DATE,AMOUNT_OBLIGATED_TO_DATE,OBLI_DISTRIBUTABLE_AMOUNT,OBLIGATION_EXPIRATION_DATE,TRANSACTION_ID,ENTRY_TYPE,EOM_PROCESS_FLAG,UPDATE_TIMESTAMP,UPDATE_USER,ANTICIPATED_CHANGE,OBLIGATED_CHANGE,OBLIGATED_CHANGE_DIRECT,OBLIGATED_CHANGE_INDIRECT,OBJ_ID,ORIGINATING_AWARD_VERSION)
			VALUES(li_amt_info_id,null,null,0,0,0,0,li_ver_nbr,null,li_award_id,ls_award_number,li_seq_info,r_amt_info.ANTICIPATED_TOTAL_AMOUNT,r_amt_info.ANT_DISTRIBUTABLE_AMOUNT,r_amt_info.FINAL_EXPIRATION_DATE,r_amt_info.CURRENT_FUND_EFFECTIVE_DATE,r_amt_info.AMOUNT_OBLIGATED_TO_DATE,r_amt_info.OBLI_DISTRIBUTABLE_AMOUNT,r_amt_info.OBLIGATION_EXPIRATION_DATE,li_transaction,'N',r_amt_info.EOM_PROCESS_FLAG,r_amt_info.UPDATE_TIMESTAMP,r_amt_info.UPDATE_USER,null,null,null,null,SYS_GUID(),li_originating_award_version);
	end if;
			SELECT SEQUENCE_AWARD_ID.NEXTVAL INTO li_amt_info_id FROM DUAL;
			INSERT INTO AWARD_AMOUNT_INFO(AWARD_AMOUNT_INFO_ID,ANTICIPATED_CHANGE_DIRECT,ANTICIPATED_CHANGE_INDIRECT,ANTICIPATED_TOTAL_DIRECT,ANTICIPATED_TOTAL_INDIRECT,OBLIGATED_TOTAL_DIRECT,OBLIGATED_TOTAL_INDIRECT,VER_NBR,TNM_DOCUMENT_NUMBER,AWARD_ID,AWARD_NUMBER,SEQUENCE_NUMBER,ANTICIPATED_TOTAL_AMOUNT,ANT_DISTRIBUTABLE_AMOUNT,FINAL_EXPIRATION_DATE,CURRENT_FUND_EFFECTIVE_DATE,AMOUNT_OBLIGATED_TO_DATE,OBLI_DISTRIBUTABLE_AMOUNT,OBLIGATION_EXPIRATION_DATE,TRANSACTION_ID,ENTRY_TYPE,EOM_PROCESS_FLAG,UPDATE_TIMESTAMP,UPDATE_USER,ANTICIPATED_CHANGE,OBLIGATED_CHANGE,OBLIGATED_CHANGE_DIRECT,OBLIGATED_CHANGE_INDIRECT,OBJ_ID,ORIGINATING_AWARD_VERSION)
			VALUES(li_amt_info_id,r_amt_info.ANTICIPATED_CHANGE_DIRECT,r_amt_info.ANTICIPATED_CHANGE_INDIRECT,r_amt_info.ANTICIPATED_TOTAL_DIRECT,r_amt_info.ANTICIPATED_TOTAL_INDIRECT,r_amt_info.OBLIGATED_TOTAL_DIRECT,r_amt_info.OBLIGATED_TOTAL_INDIRECT,li_ver_nbr,ls_tnm_document_number,li_award_id,ls_award_number,li_seq_info,r_amt_info.ANTICIPATED_TOTAL_AMOUNT,r_amt_info.ANT_DISTRIBUTABLE_AMOUNT,r_amt_info.FINAL_EXPIRATION_DATE,r_amt_info.CURRENT_FUND_EFFECTIVE_DATE,r_amt_info.AMOUNT_OBLIGATED_TO_DATE,r_amt_info.OBLI_DISTRIBUTABLE_AMOUNT,r_amt_info.OBLIGATION_EXPIRATION_DATE,li_transaction,r_amt_info.ENTRY_TYPE,r_amt_info.EOM_PROCESS_FLAG,r_amt_info.UPDATE_TIMESTAMP,r_amt_info.UPDATE_USER,r_amt_info.ANTICIPATED_CHANGE,r_amt_info.OBLIGATED_CHANGE,r_amt_info.OBLIGATED_CHANGE_DIRECT,r_amt_info.OBLIGATED_CHANGE_INDIRECT,SYS_GUID(),li_originating_award_version);

EXCEPTION
WHEN OTHERS THEN 
dbms_output.put_line('ERROR IN AWARD_AMOUNT_INFO,AWARD_NUMBER:'||r_amt_info.MIT_AWARD_NUMBER||'-'||sqlerrm);
end;
commit;
END LOOP;
CLOSE c_amt_info;
end loop;
close c_award;

END;
/
-- insert a row into AWARD_AMOUNT_INFO for those award in award master but no data in AWARD AMOUNT INFO
Insert into AWARD_AMOUNT_INFO (ANTICIPATED_CHANGE_DIRECT,ANTICIPATED_CHANGE_INDIRECT,ANTICIPATED_TOTAL_DIRECT,ANTICIPATED_TOTAL_INDIRECT,OBLIGATED_TOTAL_DIRECT,OBLIGATED_TOTAL_INDIRECT,VER_NBR,TNM_DOCUMENT_NUMBER,AWARD_AMOUNT_INFO_ID,AWARD_ID,AWARD_NUMBER,SEQUENCE_NUMBER,ANTICIPATED_TOTAL_AMOUNT,ANT_DISTRIBUTABLE_AMOUNT,FINAL_EXPIRATION_DATE,CURRENT_FUND_EFFECTIVE_DATE,AMOUNT_OBLIGATED_TO_DATE,OBLI_DISTRIBUTABLE_AMOUNT,OBLIGATION_EXPIRATION_DATE,TRANSACTION_ID,ENTRY_TYPE,EOM_PROCESS_FLAG,UPDATE_TIMESTAMP,UPDATE_USER,ANTICIPATED_CHANGE,OBLIGATED_CHANGE,OBLIGATED_CHANGE_DIRECT,OBLIGATED_CHANGE_INDIRECT,OBJ_ID,ORIGINATING_AWARD_VERSION) 
select null,null,0,0,0,0,0,null,SEQUENCE_AWARD_ID.NEXTVAL,a.award_id,a.award_number,1,0,0,sysdate,null,0,0,null,null,'N','N',sysdate,a.update_user,null,null,null,null,sys_guid(),1
from award a where a.award_id not in (select distinct award_id from award_amount_info) 
-- insert a row into AWARD_AMOUNT_INFO for those award in award master but no data in AWARD AMOUNT INFO
/
commit
/
alter table AWARD_AMOUNT_TRANSACTION drop  ( MIT_AWARD_NUMBER,MIT_TRANSACTION_ID,MIT_SEQUENCE_NUMBER)
/
select ' End time of AWARD_AMOUNT_TRANSACTION is '|| localtimestamp from dual
/