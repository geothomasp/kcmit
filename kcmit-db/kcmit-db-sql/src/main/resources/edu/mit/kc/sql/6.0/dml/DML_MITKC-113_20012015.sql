DROP INDEX AWARD_REP_I1
/
DROP INDEX IX_AWARD_REPORT_TERMS_AWARD_ID
/
CREATE INDEX AWARD_CLOSEOUT_I1 ON AWARD_CLOSEOUT(AWARD_NUMBER,SEQUENCE_NUMBER,CLOSEOUT_REPORT_CODE)
/
CREATE INDEX AWARD_REPORT_TERMS_I4 ON AWARD_REPORT_TERMS(AWARD_NUMBER,SEQUENCE_NUMBER,REPORT_CLASS_CODE)
/
CREATE INDEX OSP$AWARD_AMOUNT_INFO_I4 ON OSP$AWARD_AMOUNT_INFO(MIT_AWARD_NUMBER,SEQUENCE_NUMBER,AMOUNT_SEQUENCE_NUMBER)
/
DECLARE
li_count NUMBER;
CURSOR c_closeout IS 
SELECT a.AWARD_NUMBER,a.SEQUENCE_NUMBER,a.REPORT_CLASS_CODE,a.REPORT_CODE,a.FREQUENCY_CODE,a.FREQUENCY_BASE_CODE,a.OSP_DISTRIBUTION_CODE,a.DUE_DATE FROM AWARD_REPORT_TERMS a
INNER JOIN (SELECT distinct award_number,sequence_number from award_closeout) b
ON a.AWARD_NUMBER=b.AWARD_NUMBER
AND a.SEQUENCE_NUMBER=b.SEQUENCE_NUMBER
WHERE a.REPORT_CLASS_CODE IN('1','2','3','4','6') 
AND a.DUE_DATE IS NOT NULL;
r_closeout c_closeout%rowtype;

BEGIN
IF c_closeout%ISOPEN THEN
CLOSE c_closeout;
END IF;

OPEN c_closeout;
LOOP
FETCH c_closeout INTO r_closeout;
EXIT WHEN c_closeout%NOTFOUND;
 

UPDATE AWARD_CLOSEOUT
SET DUE_DATE=r_closeout.DUE_DATE
WHERE AWARD_NUMBER=r_closeout.award_number
AND SEQUENCE_NUMBER=r_closeout.SEQUENCE_NUMBER
AND CLOSEOUT_REPORT_CODE=r_closeout.REPORT_CLASS_CODE;


SELECT COUNT(AWARD_NUMBER) INTO li_count FROM AWARD_REPORT_TERMS WHERE AWARD_NUMBER=r_closeout.award_number
AND SEQUENCE_NUMBER=r_closeout.SEQUENCE_NUMBER AND REPORT_CLASS_CODE=r_closeout.REPORT_CLASS_CODE;

IF li_count>1 THEN
UPDATE AWARD_CLOSEOUT
SET MULTIPLE='Y'
WHERE AWARD_NUMBER=r_closeout.award_number
AND SEQUENCE_NUMBER=r_closeout.SEQUENCE_NUMBER
AND CLOSEOUT_REPORT_CODE=r_closeout.REPORT_CLASS_CODE;
END IF;

END LOOP;
CLOSE c_closeout;
END;
/
DECLARE
li_days NUMBER(8,0);
li_day NUMBER(8,0);
li_year NUMBER(8,0);
li_month NUMBER(8,0);
li_months NUMBER(8,0);
ls_date VARCHAR2(12);
ll_date DATE;
li_num NUMBER;
CURSOR c_closeout IS 
SELECT AWARD_ID,AWARD_NUMBER,SEQUENCE_NUMBER,REPORT_CLASS_CODE,REPORT_CODE,FREQUENCY_CODE,FREQUENCY_BASE_CODE,OSP_DISTRIBUTION_CODE,DUE_DATE FROM AWARD_REPORT_TERMS
WHERE DUE_DATE IS NULL;
r_closeout c_closeout%ROWTYPE;

BEGIN
IF c_closeout%ISOPEN THEN
CLOSE c_closeout;
END IF;
OPEN c_closeout;
LOOP
FETCH c_closeout INTO r_closeout;
EXIT WHEN c_closeout%NOTFOUND;

IF r_closeout.FREQUENCY_CODE IS NOT NULL THEN
BEGIN
SELECT NUMBER_OF_DAYS,NUMBER_OF_MONTHS INTO li_days,li_months FROM FREQUENCY WHERE FREQUENCY_CODE=r_closeout.FREQUENCY_CODE;
EXCEPTION
WHEN OTHERS THEN
li_days:=NULL;
li_months:=NULL;
continue;
END;
--dbms_output.put_line('Months:'||li_months);
END IF;
li_num:=1;

BEGIN 
SELECT FINAL_EXPIRATION_DATE INTO ll_date FROM OSP$AWARD_AMOUNT_INFO WHERE MIT_AWARD_NUMBER=replace(r_closeout.AWARD_NUMBER,'-00','-') AND SEQUENCE_NUMBER=r_closeout.SEQUENCE_NUMBER
AND AMOUNT_SEQUENCE_NUMBER=(SELECT MAX(AMOUNT_SEQUENCE_NUMBER) FROM OSP$AWARD_AMOUNT_INFO WHERE MIT_AWARD_NUMBER=replace(r_closeout.AWARD_NUMBER,'-00','-') AND SEQUENCE_NUMBER=r_closeout.SEQUENCE_NUMBER);
EXCEPTION
WHEN OTHERS THEN
dbms_output.put_line('AWARD_NUMBER:'||r_closeout.AWARD_NUMBER||'SEQUENCE_NUMBER:'||r_closeout.SEQUENCE_NUMBER);
continue;
li_num:=0;
END;

IF li_num=1 THEN

  IF li_days IS NOT NULL THEN


   BEGIN
      ll_date:=ll_date + li_days;
   EXCEPTION
   WHEN OTHERS THEN
   dbms_output.put_line('AWARD_NUMBER:'||r_closeout.AWARD_NUMBER||'SEQUENCE_NUMBER:'||r_closeout.SEQUENCE_NUMBER||'DATE:'||ll_date);
   CONTINUE;
   END;

  ELSE

   IF li_months IS NOT NULL THEN
   li_days:= li_months * 30;
   END IF;
   BEGIN
   ll_date:=ll_date + li_days;
   EXCEPTION
   WHEN OTHERS THEN
   dbms_output.put_line('AWARD_NUMBER:'||r_closeout.AWARD_NUMBER||'SEQUENCE_NUMBER:'||r_closeout.SEQUENCE_NUMBER||'DATE:'||ll_date);
   CONTINUE;
   END;
  END IF;
  
  IF li_num=1 THEN
  
  UPDATE AWARD_CLOSEOUT
  SET DUE_DATE=ll_date
  WHERE AWARD_NUMBER=r_closeout.award_number
  AND SEQUENCE_NUMBER=r_closeout.SEQUENCE_NUMBER
  AND CLOSEOUT_REPORT_CODE=r_closeout.REPORT_CLASS_CODE;
  
  END IF;
  
  
END IF;
END LOOP;
CLOSE c_closeout;
END;
/
